"""Add review status

Revision ID: cf649684faf2
Revises: 987ac3f81936
Create Date: 2024-06-04 14:24:04.147152

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "cf649684faf2"
down_revision = "987ac3f81936"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "review_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_review_status")),
        sa.UniqueConstraint("name", name=op.f("uq_review_status_name")),
    )
    data_upgrades()
    with op.batch_alter_table("reviews", schema=None) as batch_op:
        batch_op.add_column(sa.Column("status_id", sa.Integer(), nullable=False))
        batch_op.create_foreign_key(
            batch_op.f("fk_reviews_status_id_review_status"),
            "review_status",
            ["status_id"],
            ["id"],
            ondelete="RESTRICT",
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("reviews", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_reviews_status_id_review_status"), type_="foreignkey"
        )
        batch_op.drop_column("status_id")

    op.drop_table("review_status")
    # ### end Alembic commands ###


def data_upgrades():
    status = sa.sql.table("review_status", sa.sql.column("name", sa.String))

    op.bulk_insert(
        status,
        [
            {"name": "На рассмотрении"},
            {"name": "Одобрено"},
            {"name": "Отклонено"},
        ],
    )
